/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Operations.KeyOperations;
import Operations.KeySimulator;
import Util.FileLoader;
import Util.Globals;
import Util.WindowMonitor;
import java.lang.Thread.State;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.UIManager;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author u55369
 */
public class MainUi extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    private KeySimulator keySimulator;
    private List OperationList;
    private String keySimState;
    static boolean isAbout = false;

    private Thread updateUI = new Thread() {
        public void run() {
            while (true) {
                countLabel.setText(String.valueOf(keySimulator.getIteractionCount()));
                operLabel.setText(keySimulator.getCurrentOperation());

                //System.out.println("state : "+ keySimulator.getState());
                if (keySimulator.getState().equals(State.NEW)) {
                    keySimState = "Ready ";
                } else if (keySimulator.getState().equals(State.TERMINATED)) {
                    keySimState = "Completed";

                } else if (keySimulator.getState().equals(State.TIMED_WAITING)) {
                    keySimState = "Excecuting!";

                    if (keySimulator.getIteractionCount() == 0) {
                        compTable.setRowSelectionInterval(keySimulator.getIteractionCount(), keySimulator.getIteractionCount());
                    } else {
                        compTable.setRowSelectionInterval(keySimulator.getIteractionCount() - 1, keySimulator.getIteractionCount() - 1);
                    }
                }
                statusLabel.setText(keySimState);
                try {
                    updateUI.sleep(100);
                } catch (InterruptedException ex) {
                    Logger.getLogger(MainUi.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
    };

    public MainUi() {
        initComponents();
        operListLoad();
        updateUI.start();
    }

    private void operListLoad() {
        operSelect.removeAllItems();
        for (List list : FileLoader.getOperationsList()) {
            operSelect.addItem(list.get(0));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        contPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        countLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        operLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        startIndex = new javax.swing.JTextField();
        stopIndex = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        operSelect = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        start = new javax.swing.JButton();
        resume = new javax.swing.JButton();
        stop = new javax.swing.JButton();
        reload = new javax.swing.JButton();
        side = new javax.swing.JButton();
        bottom = new javax.swing.JButton();
        all = new javax.swing.JLabel();
        sidePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        keyStrokes = new javax.swing.JTextArea();
        downPanel = new javax.swing.JPanel();
        FILE = new javax.swing.JLabel();
        compFileName = new javax.swing.JTextField();
        load = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        compTable = new javax.swing.JTable();
        lookUp = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        loadConfig = new javax.swing.JMenu();
        loadConfig1 = new javax.swing.JMenu();
        tool_WinMonitor = new javax.swing.JMenuItem();
        about = new javax.swing.JMenu();
        contact = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RPA");
        setAlwaysOnTop(true);
        setAutoRequestFocus(false);
        setLocation(new java.awt.Point(950, 150));
        setResizable(false);

        mainPanel.setBackground(new java.awt.Color(204, 255, 204));
        mainPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        mainPanel.setMinimumSize(new java.awt.Dimension(160, 300));
        mainPanel.setPreferredSize(new java.awt.Dimension(180, 300));
        mainPanel.setLayout(new java.awt.BorderLayout());

        contPanel.setBackground(new java.awt.Color(162, 215, 248));
        contPanel.setPreferredSize(new java.awt.Dimension(180, 300));
        contPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(162, 215, 248));

        jLabel6.setText("Count         :");

        jLabel5.setText("Operation   :");

        jLabel3.setText("Tool Status :");

        jLabel2.setText("LIMIT  : ");

        jLabel1.setText("START : ");

        startIndex.setText("1");

        stopIndex.setText("1");

        jLabel4.setText("Operation ");

        operSelect.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        operSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                operSelectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(startIndex, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stopIndex, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(operLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(countLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(statusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addComponent(operSelect, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(operSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addGap(18, 43, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(countLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(operLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(statusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(28, 28, 28)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(startIndex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stopIndex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap())
        );

        contPanel.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 5, 160, 200));

        jPanel2.setBackground(new java.awt.Color(162, 215, 248));
        jPanel2.setLayout(new java.awt.GridLayout(2, 0, 10, 5));

        start.setText("START");
        start.setPreferredSize(new java.awt.Dimension(73, 20));
        start.setRequestFocusEnabled(false);
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });
        jPanel2.add(start);

        resume.setText("RESUME");
        resume.setPreferredSize(new java.awt.Dimension(73, 20));
        resume.setRequestFocusEnabled(false);
        jPanel2.add(resume);

        stop.setText("STOP");
        stop.setPreferredSize(new java.awt.Dimension(73, 20));
        stop.setRequestFocusEnabled(false);
        stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopActionPerformed(evt);
            }
        });
        jPanel2.add(stop);

        reload.setText("RELOAD");
        reload.setPreferredSize(new java.awt.Dimension(73, 20));
        reload.setRequestFocusEnabled(false);
        reload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reloadActionPerformed(evt);
            }
        });
        jPanel2.add(reload);

        contPanel.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 170, 50));

        side.setBackground(new java.awt.Color(153, 153, 255));
        side.setText("◄");
        side.setAlignmentY(0.0F);
        side.setBorder(null);
        side.setBorderPainted(false);
        side.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        side.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        side.setIconTextGap(0);
        side.setMargin(new java.awt.Insets(0, 0, 0, 0));
        side.setPreferredSize(new java.awt.Dimension(11, 90));
        side.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sideActionPerformed(evt);
            }
        });
        contPanel.add(side, new org.netbeans.lib.awtextra.AbsoluteConstraints(184, 0, -1, 270));

        bottom.setBackground(new java.awt.Color(153, 153, 255));
        bottom.setText("▲");
        bottom.setPreferredSize(new java.awt.Dimension(40, 15));
        bottom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bottomActionPerformed(evt);
            }
        });
        contPanel.add(bottom, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 285, 160, 10));

        all.setText("↖");
        all.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                allMouseClicked(evt);
            }
        });
        contPanel.add(all, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 280, 10, -1));

        mainPanel.add(contPanel, java.awt.BorderLayout.CENTER);

        sidePanel.setBackground(new java.awt.Color(0, 204, 204));
        sidePanel.setPreferredSize(new java.awt.Dimension(200, 300));

        keyStrokes.setBackground(new java.awt.Color(204, 255, 204));
        keyStrokes.setColumns(20);
        keyStrokes.setRows(5);
        jScrollPane1.setViewportView(keyStrokes);

        javax.swing.GroupLayout sidePanelLayout = new javax.swing.GroupLayout(sidePanel);
        sidePanel.setLayout(sidePanelLayout);
        sidePanelLayout.setHorizontalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
        );
        sidePanelLayout.setVerticalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        downPanel.setBackground(new java.awt.Color(255, 204, 204));
        downPanel.setPreferredSize(new java.awt.Dimension(380, 200));

        FILE.setText("FILE : ");

        compFileName.setText("d:\\comp.xlsx");
        compFileName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compFileNameActionPerformed(evt);
            }
        });

        load.setText("LOAD");
        load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadActionPerformed(evt);
            }
        });

        compTable.setBackground(new java.awt.Color(204, 255, 204));
        compTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        compTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        compTable.setGridColor(new java.awt.Color(102, 255, 102));
        compTable.setSelectionBackground(new java.awt.Color(0, 153, 255));
        jScrollPane3.setViewportView(compTable);

        lookUp.setText("Look Up");
        lookUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lookUpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout downPanelLayout = new javax.swing.GroupLayout(downPanel);
        downPanel.setLayout(downPanelLayout);
        downPanelLayout.setHorizontalGroup(
            downPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(downPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(FILE)
                .addGap(18, 18, 18)
                .addComponent(compFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(load)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lookUp)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        downPanelLayout.setVerticalGroup(
            downPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(downPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(downPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FILE)
                    .addComponent(compFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(load)
                    .addComponent(lookUp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE))
        );

        jMenuBar1.setBackground(new java.awt.Color(153, 255, 153));
        jMenuBar1.setForeground(new java.awt.Color(204, 255, 204));

        loadConfig.setText("Load Config");
        loadConfig.setMargin(new java.awt.Insets(0, 0, 0, 10));
        loadConfig.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loadConfigMouseClicked(evt);
            }
        });
        jMenuBar1.add(loadConfig);

        loadConfig1.setText("Tools");
        loadConfig1.setMargin(new java.awt.Insets(0, 0, 0, 10));
        loadConfig1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loadConfig1MouseClicked(evt);
            }
        });

        tool_WinMonitor.setText("Window Monitor");
        tool_WinMonitor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tool_WinMonitorActionPerformed(evt);
            }
        });
        loadConfig1.add(tool_WinMonitor);

        jMenuBar1.add(loadConfig1);

        about.setText("About");
        about.setMargin(new java.awt.Insets(0, 0, 0, 10));
        about.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aboutMouseClicked(evt);
            }
        });
        jMenuBar1.add(about);

        contact.setText("Contact");
        contact.setMargin(new java.awt.Insets(0, 0, 0, 10));
        contact.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                contactMouseClicked(evt);
            }
        });
        jMenuBar1.add(contact);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(downPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(sidePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sidePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(downPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bottomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bottomActionPerformed
        // TODO add your handling code here:
        downWindowResize();
    }//GEN-LAST:event_bottomActionPerformed

    private void stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopActionPerformed
        // TODO add your handling code here:
        stopKeySim();
    }//GEN-LAST:event_stopActionPerformed

    private void stopKeySim() {
        keySimulator.stop();
    }
    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
        // TODO add your handling code here  
        startKeySim();

    }//GEN-LAST:event_startActionPerformed

    private void windowMonitor() {
        WindowMonitor.startWindowMonitor();   
    }

    private void startKeySim() {

        if (keySimulator != null) {
            if (keySimulator.getState().equals(Thread.State.RUNNABLE) || keySimulator.getState().equals(Thread.State.TIMED_WAITING)) {
                keySimulator.stop();
                //System.out.println("the thread terminated");
            }
        }

        int start = Integer.parseInt(startIndex.getText());
        int stop = Integer.parseInt(stopIndex.getText());

        keySimulator = new KeySimulator(start, stop, OperationList, FileLoader.getComponentsList());
        keySimulator.start();
    }
    private void operSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_operSelectActionPerformed
        // TODO add your handling code here:
        OperationList.clear();
        for (List<String> list : FileLoader.getOperationsList()) {
            if (list.get(0).equals(operSelect.getSelectedItem())) {
                keyStrokes.setText("Operation : " + list.get(0).toUpperCase() + "\n");

                for (int i = 1; i < list.size(); i++) {
                    keyStrokes.append("\n");
                    String op = list.get(i);
                    keyStrokes.append(op);

                }
                OperationList.addAll(list);
                OperationList.remove(0);
            }

        }
    }//GEN-LAST:event_operSelectActionPerformed

    private void sideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sideActionPerformed
        // TODO add your handling code here:
        sideWindowResize();
    }//GEN-LAST:event_sideActionPerformed

    private void tableLoad() {
        DefaultTableModel tmodel = new DefaultTableModel();

        tmodel.addColumn("#", noColAdd());

        for (List list : FileLoader.getComponentsList()) {
            Vector temp = new Vector(list);
            temp.remove(0);
            tmodel.addColumn(list.get(0), temp);
        }

        compTable.setModel(tmodel);
    }

    private Vector noColAdd() {
        int maxCount = 0;

        for (List list : FileLoader.getComponentsList()) {
            if (maxCount < list.size()) {
                maxCount = list.size();
            }
        }

        Vector nos = new Vector();
        for (int i = 1; i < maxCount; i++) {
            nos.add(i);
        }

        return nos;
    }

    private void loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadActionPerformed
        // TODO add your handling code here:
        FileLoader.setComponentFile(compFileName.getText());
        tableLoad();

//        componentShow.setText("Loaded Excel values\n");
//        for (ArrayList<String> list : FileLoader.getComponentsList()) {
//            for (String comp : list) {
//                componentShow.append("\t");
//                componentShow.append(comp);
//            }
//            componentShow.append("\n");
//        }
    }//GEN-LAST:event_loadActionPerformed

    private void reloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reloadActionPerformed
        // TODO add your handling code here:
        FileLoader.setConfigurationFile(FileLoader.getConfigurationFile());
        operListLoad();
    }//GEN-LAST:event_reloadActionPerformed

    private void allMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allMouseClicked
        // TODO add your handling code here:
        if (all.getText().equals("↖")) {
            all.setText("↘");
            sideWindowResize();
            downWindowResize();
        } else {
            all.setText("↖");
            sideWindowResize();
            downWindowResize();
        }

    }//GEN-LAST:event_allMouseClicked

    private void compFileNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compFileNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_compFileNameActionPerformed

    private void lookUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lookUpActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        fc.setFileFilter(new FileNameExtensionFilter("Excel files", "xlsx"));
        fc.showOpenDialog(this);

        if (fc.getSelectedFile() != null) {
            FileLoader.setComponentFile(fc.getSelectedFile().getAbsolutePath());
            tableLoad();
            compFileName.setText(fc.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_lookUpActionPerformed

    private void loadConfigMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadConfigMouseClicked
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        fc.setFileFilter(new FileNameExtensionFilter("Excel files", "xlsx"));
        fc.showOpenDialog(this);

        if (fc.getSelectedFile() != null) {
            FileLoader.setConfigurationFile(fc.getSelectedFile().getAbsolutePath());
            operListLoad();
        }
    }//GEN-LAST:event_loadConfigMouseClicked

    private void aboutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutMouseClicked
        // TODO add your handling code here:
        if (!isAbout) {
            Help.main(0);
            isAbout = true;
        }
    }//GEN-LAST:event_aboutMouseClicked

    private void contactMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contactMouseClicked
        // TODO add your handling code here:
        if (!isAbout) {
            Help.main(5);
            isAbout = true;
        }
    }//GEN-LAST:event_contactMouseClicked

    private void loadConfig1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadConfig1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_loadConfig1MouseClicked

    private void tool_WinMonitorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tool_WinMonitorActionPerformed
        // TODO add your handling code here:
        
        WindowTitleFinder.main(new String[]{});
    }//GEN-LAST:event_tool_WinMonitorActionPerformed

    private void sideWindowResize() {
        if (side.getText().equals("►")) {
            side.setText("◄");
            sidePanel.setVisible(true);
            if (bottom.getText().equals("▲")) {

            } else {
                this.setSize(this.getWidth() + 200, this.getHeight());
            }
        } else {
            side.setText("►");
            sidePanel.setVisible(false);
            if (bottom.getText().equals("▲")) {

            } else {
                this.setSize(this.getWidth() - 200, this.getHeight());
            }
        }
    }

    private void downWindowResize() {

        if (bottom.getText().equals("▼")) {
            bottom.setText("▲");
            downPanel.setVisible(true);

            if (side.getText().equals("◄")) {
                this.setSize(this.getWidth(), this.getHeight() + Globals.BOTTOM_HEIGHT - Globals.FRAME_DY);
            } else {
                this.setSize(this.getWidth() + Globals.WIDTH, this.getHeight() + Globals.BOTTOM_HEIGHT - Globals.FRAME_DY);
                //mainPanel.setSize(380, 300);
            }
        } else {
            bottom.setText("▼");
            downPanel.setVisible(false);

            if (side.getText().equals("◄")) {
                this.setSize(this.getWidth(), this.getHeight() - Globals.BOTTOM_HEIGHT + Globals.FRAME_DY);
            } else {
                this.setSize(this.getWidth() - Globals.WIDTH, this.getHeight() - Globals.BOTTOM_HEIGHT + Globals.FRAME_DY);

            }
        }
    }

    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {

            javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());

        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainUi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel FILE;
    private javax.swing.JMenu about;
    private javax.swing.JLabel all;
    private javax.swing.JButton bottom;
    private javax.swing.JTextField compFileName;
    private javax.swing.JTable compTable;
    private javax.swing.JPanel contPanel;
    private javax.swing.JMenu contact;
    private javax.swing.JLabel countLabel;
    private javax.swing.JPanel downPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea keyStrokes;
    private javax.swing.JButton load;
    private javax.swing.JMenu loadConfig;
    private javax.swing.JMenu loadConfig1;
    private javax.swing.JButton lookUp;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel operLabel;
    private javax.swing.JComboBox operSelect;
    private javax.swing.JButton reload;
    private javax.swing.JButton resume;
    private javax.swing.JButton side;
    private javax.swing.JPanel sidePanel;
    private javax.swing.JButton start;
    private javax.swing.JTextField startIndex;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JButton stop;
    private javax.swing.JTextField stopIndex;
    private javax.swing.JMenuItem tool_WinMonitor;
    // End of variables declaration//GEN-END:variables

}
